
STM32F4_Drivers_Development.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000007e4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800098c  08000994  00010994  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800098c  0800098c  00010994  2**0
                  CONTENTS
  4 .ARM          00000000  0800098c  0800098c  00010994  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800098c  08000994  00010994  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800098c  0800098c  0001098c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000990  08000990  00010990  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010994  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  08000994  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000994  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010994  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000092a  00000000  00000000  000109c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001f4  00000000  00000000  000112ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b8  00000000  00000000  000114e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  000115a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000014f5  00000000  00000000  00011630  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000a6e  00000000  00000000  00012b25  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000058b4  00000000  00000000  00013593  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00018e47  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000218  00000000  00000000  00018ec4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000974 	.word	0x08000974

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000974 	.word	0x08000974

080001e8 <main>:
#include "stm32f407xx.h"

uint8_t Btn_1_St = 0;

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b082      	sub	sp, #8
 80001ec:	af00      	add	r7, sp, #0
	//LED GPIO Def
	GPIO_Handle_t *GPIO_Cfg;
	GPIO_PeriClockControl(GPIOF, ENABLE);
 80001ee:	2101      	movs	r1, #1
 80001f0:	4827      	ldr	r0, [pc, #156]	; (8000290 <main+0xa8>)
 80001f2:	f000 fa21 	bl	8000638 <GPIO_PeriClockControl>
	GPIO_Cfg->pGPIOBaseAddr = GPIOF;
 80001f6:	683b      	ldr	r3, [r7, #0]
 80001f8:	4a25      	ldr	r2, [pc, #148]	; (8000290 <main+0xa8>)
 80001fa:	601a      	str	r2, [r3, #0]
	GPIO_Cfg->GPIO_PinConfig.PinAltFunMode = 0;
 80001fc:	683b      	ldr	r3, [r7, #0]
 80001fe:	2200      	movs	r2, #0
 8000200:	725a      	strb	r2, [r3, #9]
	GPIO_Cfg->GPIO_PinConfig.PinMode = GPIO_MODE_OUTPUT;
 8000202:	683b      	ldr	r3, [r7, #0]
 8000204:	2201      	movs	r2, #1
 8000206:	715a      	strb	r2, [r3, #5]
	GPIO_Cfg->GPIO_PinConfig.PinNumber = GPIO_PINNUM_9;
 8000208:	683b      	ldr	r3, [r7, #0]
 800020a:	2209      	movs	r2, #9
 800020c:	711a      	strb	r2, [r3, #4]
	GPIO_Cfg->GPIO_PinConfig.PinOPType = GPIO_OP_TYPE_OD;
 800020e:	683b      	ldr	r3, [r7, #0]
 8000210:	2201      	movs	r2, #1
 8000212:	721a      	strb	r2, [r3, #8]
	GPIO_Cfg->GPIO_PinConfig.PinPuPdControl = GPIO_PUPD_PU;
 8000214:	683b      	ldr	r3, [r7, #0]
 8000216:	2201      	movs	r2, #1
 8000218:	71da      	strb	r2, [r3, #7]
	GPIO_Cfg->GPIO_PinConfig.PinSpeed = GPIO_SPEED_HI;
 800021a:	683b      	ldr	r3, [r7, #0]
 800021c:	2203      	movs	r2, #3
 800021e:	719a      	strb	r2, [r3, #6]
	GPIO_Init(GPIO_Cfg);
 8000220:	6838      	ldr	r0, [r7, #0]
 8000222:	f000 f877 	bl	8000314 <GPIO_Init>

	//Button GPIO Def
	GPIO_PeriClockControl(GPIOE, ENABLE);
 8000226:	2101      	movs	r1, #1
 8000228:	481a      	ldr	r0, [pc, #104]	; (8000294 <main+0xac>)
 800022a:	f000 fa05 	bl	8000638 <GPIO_PeriClockControl>
	GPIO_Cfg->pGPIOBaseAddr = GPIOE;
 800022e:	683b      	ldr	r3, [r7, #0]
 8000230:	4a18      	ldr	r2, [pc, #96]	; (8000294 <main+0xac>)
 8000232:	601a      	str	r2, [r3, #0]
	GPIO_Cfg->GPIO_PinConfig.PinAltFunMode = 0;
 8000234:	683b      	ldr	r3, [r7, #0]
 8000236:	2200      	movs	r2, #0
 8000238:	725a      	strb	r2, [r3, #9]
	GPIO_Cfg->GPIO_PinConfig.PinMode = GPIO_MODE_IT_RT;
 800023a:	683b      	ldr	r3, [r7, #0]
 800023c:	2205      	movs	r2, #5
 800023e:	715a      	strb	r2, [r3, #5]
	GPIO_Cfg->GPIO_PinConfig.PinNumber = GPIO_PINNUM_3;
 8000240:	683b      	ldr	r3, [r7, #0]
 8000242:	2203      	movs	r2, #3
 8000244:	711a      	strb	r2, [r3, #4]
	GPIO_Cfg->GPIO_PinConfig.PinOPType = 0x0;
 8000246:	683b      	ldr	r3, [r7, #0]
 8000248:	2200      	movs	r2, #0
 800024a:	721a      	strb	r2, [r3, #8]
	GPIO_Cfg->GPIO_PinConfig.PinPuPdControl = GPIO_PUPD_PU;
 800024c:	683b      	ldr	r3, [r7, #0]
 800024e:	2201      	movs	r2, #1
 8000250:	71da      	strb	r2, [r3, #7]
	GPIO_Cfg->GPIO_PinConfig.PinSpeed = GPIO_SPEED_HI;
 8000252:	683b      	ldr	r3, [r7, #0]
 8000254:	2203      	movs	r2, #3
 8000256:	719a      	strb	r2, [r3, #6]
	GPIO_Init(GPIO_Cfg);
 8000258:	6838      	ldr	r0, [r7, #0]
 800025a:	f000 f85b 	bl	8000314 <GPIO_Init>

	GPIO_IRQConfig(IRQ_NO_EXTI3, 0x01, ENABLE); //Enable IRQ
 800025e:	2201      	movs	r2, #1
 8000260:	2101      	movs	r1, #1
 8000262:	2009      	movs	r0, #9
 8000264:	f000 faa0 	bl	80007a8 <GPIO_IRQConfig>
	/* Loop forever */
	while(1)
	{
		//Btn_1_St = GPIO_ReadInputPin(GPIOE, GPIO_PINNUM_3);

		if(Btn_1_St == 0)
 8000268:	4b0b      	ldr	r3, [pc, #44]	; (8000298 <main+0xb0>)
 800026a:	781b      	ldrb	r3, [r3, #0]
 800026c:	2b00      	cmp	r3, #0
 800026e:	d1fb      	bne.n	8000268 <main+0x80>
		{
			GPIO_ToggleOutputPin(GPIOF,GPIO_PINNUM_9);
 8000270:	2109      	movs	r1, #9
 8000272:	4807      	ldr	r0, [pc, #28]	; (8000290 <main+0xa8>)
 8000274:	f000 fa82 	bl	800077c <GPIO_ToggleOutputPin>
			for(uint32_t i=0; i<500000;i++);
 8000278:	2300      	movs	r3, #0
 800027a:	607b      	str	r3, [r7, #4]
 800027c:	e002      	b.n	8000284 <main+0x9c>
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	3301      	adds	r3, #1
 8000282:	607b      	str	r3, [r7, #4]
 8000284:	687b      	ldr	r3, [r7, #4]
 8000286:	4a05      	ldr	r2, [pc, #20]	; (800029c <main+0xb4>)
 8000288:	4293      	cmp	r3, r2
 800028a:	d9f8      	bls.n	800027e <main+0x96>
		if(Btn_1_St == 0)
 800028c:	e7ec      	b.n	8000268 <main+0x80>
 800028e:	bf00      	nop
 8000290:	40021400 	.word	0x40021400
 8000294:	40021000 	.word	0x40021000
 8000298:	2000001c 	.word	0x2000001c
 800029c:	0007a11f 	.word	0x0007a11f

080002a0 <EXTI3_IRQHandler>:

	return 0;
}

void EXTI3_IRQHandler(void)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(3);
 80002a4:	2003      	movs	r0, #3
 80002a6:	f000 fb21 	bl	80008ec <GPIO_IRQHandling>
	Btn_1_St = Btn_1_St ^ 1;
 80002aa:	4b04      	ldr	r3, [pc, #16]	; (80002bc <EXTI3_IRQHandler+0x1c>)
 80002ac:	781b      	ldrb	r3, [r3, #0]
 80002ae:	f083 0301 	eor.w	r3, r3, #1
 80002b2:	b2da      	uxtb	r2, r3
 80002b4:	4b01      	ldr	r3, [pc, #4]	; (80002bc <EXTI3_IRQHandler+0x1c>)
 80002b6:	701a      	strb	r2, [r3, #0]
}
 80002b8:	bf00      	nop
 80002ba:	bd80      	pop	{r7, pc}
 80002bc:	2000001c 	.word	0x2000001c

080002c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c0:	480d      	ldr	r0, [pc, #52]	; (80002f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c8:	480c      	ldr	r0, [pc, #48]	; (80002fc <LoopForever+0x6>)
  ldr r1, =_edata
 80002ca:	490d      	ldr	r1, [pc, #52]	; (8000300 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002cc:	4a0d      	ldr	r2, [pc, #52]	; (8000304 <LoopForever+0xe>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d0:	e002      	b.n	80002d8 <LoopCopyDataInit>

080002d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d6:	3304      	adds	r3, #4

080002d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002dc:	d3f9      	bcc.n	80002d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002de:	4a0a      	ldr	r2, [pc, #40]	; (8000308 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e0:	4c0a      	ldr	r4, [pc, #40]	; (800030c <LoopForever+0x16>)
  movs r3, #0
 80002e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e4:	e001      	b.n	80002ea <LoopFillZerobss>

080002e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e8:	3204      	adds	r2, #4

080002ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002ec:	d3fb      	bcc.n	80002e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ee:	f000 fb1d 	bl	800092c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f2:	f7ff ff79 	bl	80001e8 <main>

080002f6 <LoopForever>:

LoopForever:
    b LoopForever
 80002f6:	e7fe      	b.n	80002f6 <LoopForever>
  ldr   r0, =_estack
 80002f8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000300:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000304:	08000994 	.word	0x08000994
  ldr r2, =_sbss
 8000308:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800030c:	20000020 	.word	0x20000020

08000310 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000310:	e7fe      	b.n	8000310 <ADC_IRQHandler>
	...

08000314 <GPIO_Init>:

// ********** GPIO APIs function definition **********

// *** GPIO Initialization and Control ***
void GPIO_Init(GPIO_Handle_t *pGPIOHandle) //Initialize GPIO Port and Pin
{
 8000314:	b480      	push	{r7}
 8000316:	b087      	sub	sp, #28
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
	pRCC_RegDef();
 800031c:	4b53      	ldr	r3, [pc, #332]	; (800046c <GPIO_Init+0x158>)
 800031e:	617b      	str	r3, [r7, #20]

	uint32_t Temp = 0;
 8000320:	2300      	movs	r3, #0
 8000322:	613b      	str	r3, [r7, #16]

	//Configure MODE
	if(pGPIOHandle->GPIO_PinConfig.PinMode < 3) //Non interrupt mode
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	795b      	ldrb	r3, [r3, #5]
 8000328:	2b02      	cmp	r3, #2
 800032a:	d820      	bhi.n	800036e <GPIO_Init+0x5a>
	{
		Temp = pGPIOHandle->GPIO_PinConfig.PinMode << (2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	795b      	ldrb	r3, [r3, #5]
 8000330:	461a      	mov	r2, r3
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	791b      	ldrb	r3, [r3, #4]
 8000336:	005b      	lsls	r3, r3, #1
 8000338:	fa02 f303 	lsl.w	r3, r2, r3
 800033c:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOBaseAddr->MODER &= ~(0x11 << 2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	681a      	ldr	r2, [r3, #0]
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	791b      	ldrb	r3, [r3, #4]
 8000348:	005b      	lsls	r3, r3, #1
 800034a:	2111      	movs	r1, #17
 800034c:	fa01 f303 	lsl.w	r3, r1, r3
 8000350:	43db      	mvns	r3, r3
 8000352:	4619      	mov	r1, r3
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	400a      	ands	r2, r1
 800035a:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOBaseAddr->MODER |= Temp;
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	6819      	ldr	r1, [r3, #0]
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	681b      	ldr	r3, [r3, #0]
 8000366:	693a      	ldr	r2, [r7, #16]
 8000368:	430a      	orrs	r2, r1
 800036a:	601a      	str	r2, [r3, #0]
 800036c:	e0a9      	b.n	80004c2 <GPIO_Init+0x1ae>
	}
	else
	{
		//Configure interrupt trigger (Rising and/or falling edge)
		if(pGPIOHandle->GPIO_PinConfig.PinMode == GPIO_MODE_IT_FT)
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	795b      	ldrb	r3, [r3, #5]
 8000372:	2b04      	cmp	r3, #4
 8000374:	d117      	bne.n	80003a6 <GPIO_Init+0x92>
		{
			EXTI->FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.PinNumber);
 8000376:	4b3e      	ldr	r3, [pc, #248]	; (8000470 <GPIO_Init+0x15c>)
 8000378:	68db      	ldr	r3, [r3, #12]
 800037a:	687a      	ldr	r2, [r7, #4]
 800037c:	7912      	ldrb	r2, [r2, #4]
 800037e:	4611      	mov	r1, r2
 8000380:	2201      	movs	r2, #1
 8000382:	408a      	lsls	r2, r1
 8000384:	43d2      	mvns	r2, r2
 8000386:	4611      	mov	r1, r2
 8000388:	4a39      	ldr	r2, [pc, #228]	; (8000470 <GPIO_Init+0x15c>)
 800038a:	400b      	ands	r3, r1
 800038c:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.PinNumber);
 800038e:	4b38      	ldr	r3, [pc, #224]	; (8000470 <GPIO_Init+0x15c>)
 8000390:	689b      	ldr	r3, [r3, #8]
 8000392:	687a      	ldr	r2, [r7, #4]
 8000394:	7912      	ldrb	r2, [r2, #4]
 8000396:	4611      	mov	r1, r2
 8000398:	2201      	movs	r2, #1
 800039a:	408a      	lsls	r2, r1
 800039c:	4611      	mov	r1, r2
 800039e:	4a34      	ldr	r2, [pc, #208]	; (8000470 <GPIO_Init+0x15c>)
 80003a0:	430b      	orrs	r3, r1
 80003a2:	6093      	str	r3, [r2, #8]
 80003a4:	e035      	b.n	8000412 <GPIO_Init+0xfe>
		}
		else if(pGPIOHandle->GPIO_PinConfig.PinMode == GPIO_MODE_IT_RT)
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	795b      	ldrb	r3, [r3, #5]
 80003aa:	2b05      	cmp	r3, #5
 80003ac:	d117      	bne.n	80003de <GPIO_Init+0xca>
		{
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.PinNumber);
 80003ae:	4b30      	ldr	r3, [pc, #192]	; (8000470 <GPIO_Init+0x15c>)
 80003b0:	68db      	ldr	r3, [r3, #12]
 80003b2:	687a      	ldr	r2, [r7, #4]
 80003b4:	7912      	ldrb	r2, [r2, #4]
 80003b6:	4611      	mov	r1, r2
 80003b8:	2201      	movs	r2, #1
 80003ba:	408a      	lsls	r2, r1
 80003bc:	4611      	mov	r1, r2
 80003be:	4a2c      	ldr	r2, [pc, #176]	; (8000470 <GPIO_Init+0x15c>)
 80003c0:	430b      	orrs	r3, r1
 80003c2:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.PinNumber);
 80003c4:	4b2a      	ldr	r3, [pc, #168]	; (8000470 <GPIO_Init+0x15c>)
 80003c6:	689b      	ldr	r3, [r3, #8]
 80003c8:	687a      	ldr	r2, [r7, #4]
 80003ca:	7912      	ldrb	r2, [r2, #4]
 80003cc:	4611      	mov	r1, r2
 80003ce:	2201      	movs	r2, #1
 80003d0:	408a      	lsls	r2, r1
 80003d2:	43d2      	mvns	r2, r2
 80003d4:	4611      	mov	r1, r2
 80003d6:	4a26      	ldr	r2, [pc, #152]	; (8000470 <GPIO_Init+0x15c>)
 80003d8:	400b      	ands	r3, r1
 80003da:	6093      	str	r3, [r2, #8]
 80003dc:	e019      	b.n	8000412 <GPIO_Init+0xfe>
		}
		else if(pGPIOHandle->GPIO_PinConfig.PinMode == GPIO_MODE_IT_RFT)
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	795b      	ldrb	r3, [r3, #5]
 80003e2:	2b06      	cmp	r3, #6
 80003e4:	d115      	bne.n	8000412 <GPIO_Init+0xfe>
		{
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.PinNumber);
 80003e6:	4b22      	ldr	r3, [pc, #136]	; (8000470 <GPIO_Init+0x15c>)
 80003e8:	68db      	ldr	r3, [r3, #12]
 80003ea:	687a      	ldr	r2, [r7, #4]
 80003ec:	7912      	ldrb	r2, [r2, #4]
 80003ee:	4611      	mov	r1, r2
 80003f0:	2201      	movs	r2, #1
 80003f2:	408a      	lsls	r2, r1
 80003f4:	4611      	mov	r1, r2
 80003f6:	4a1e      	ldr	r2, [pc, #120]	; (8000470 <GPIO_Init+0x15c>)
 80003f8:	430b      	orrs	r3, r1
 80003fa:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.PinNumber);
 80003fc:	4b1c      	ldr	r3, [pc, #112]	; (8000470 <GPIO_Init+0x15c>)
 80003fe:	689b      	ldr	r3, [r3, #8]
 8000400:	687a      	ldr	r2, [r7, #4]
 8000402:	7912      	ldrb	r2, [r2, #4]
 8000404:	4611      	mov	r1, r2
 8000406:	2201      	movs	r2, #1
 8000408:	408a      	lsls	r2, r1
 800040a:	4611      	mov	r1, r2
 800040c:	4a18      	ldr	r2, [pc, #96]	; (8000470 <GPIO_Init+0x15c>)
 800040e:	430b      	orrs	r3, r1
 8000410:	6093      	str	r3, [r2, #8]
		}

		//Configure the GPIO Port selected in the EXTI line
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.PinNumber / 4;
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	791b      	ldrb	r3, [r3, #4]
 8000416:	089b      	lsrs	r3, r3, #2
 8000418:	73fb      	strb	r3, [r7, #15]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.PinNumber % 4;
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	791b      	ldrb	r3, [r3, #4]
 800041e:	f003 0303 	and.w	r3, r3, #3
 8000422:	73bb      	strb	r3, [r7, #14]
		uint8_t portcode = GPIO_BASE_ADDRESS_TO_CODE(pGPIOHandle->pGPIOBaseAddr);
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	4a12      	ldr	r2, [pc, #72]	; (8000474 <GPIO_Init+0x160>)
 800042a:	4293      	cmp	r3, r2
 800042c:	d02c      	beq.n	8000488 <GPIO_Init+0x174>
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	4a11      	ldr	r2, [pc, #68]	; (8000478 <GPIO_Init+0x164>)
 8000434:	4293      	cmp	r3, r2
 8000436:	d016      	beq.n	8000466 <GPIO_Init+0x152>
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	4a0f      	ldr	r2, [pc, #60]	; (800047c <GPIO_Init+0x168>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d00f      	beq.n	8000462 <GPIO_Init+0x14e>
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	4a0e      	ldr	r2, [pc, #56]	; (8000480 <GPIO_Init+0x16c>)
 8000448:	4293      	cmp	r3, r2
 800044a:	d008      	beq.n	800045e <GPIO_Init+0x14a>
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	4a0c      	ldr	r2, [pc, #48]	; (8000484 <GPIO_Init+0x170>)
 8000452:	4293      	cmp	r3, r2
 8000454:	d101      	bne.n	800045a <GPIO_Init+0x146>
 8000456:	2305      	movs	r3, #5
 8000458:	e017      	b.n	800048a <GPIO_Init+0x176>
 800045a:	2300      	movs	r3, #0
 800045c:	e015      	b.n	800048a <GPIO_Init+0x176>
 800045e:	2304      	movs	r3, #4
 8000460:	e013      	b.n	800048a <GPIO_Init+0x176>
 8000462:	2303      	movs	r3, #3
 8000464:	e011      	b.n	800048a <GPIO_Init+0x176>
 8000466:	2302      	movs	r3, #2
 8000468:	e00f      	b.n	800048a <GPIO_Init+0x176>
 800046a:	bf00      	nop
 800046c:	40023800 	.word	0x40023800
 8000470:	40013c00 	.word	0x40013c00
 8000474:	40020400 	.word	0x40020400
 8000478:	40020800 	.word	0x40020800
 800047c:	40020c00 	.word	0x40020c00
 8000480:	40021000 	.word	0x40021000
 8000484:	40021400 	.word	0x40021400
 8000488:	2300      	movs	r3, #0
 800048a:	737b      	strb	r3, [r7, #13]

		SYSCFG_CLK_EN();
 800048c:	697b      	ldr	r3, [r7, #20]
 800048e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000490:	f443 4280 	orr.w	r2, r3, #16384	; 0x4000
 8000494:	697b      	ldr	r3, [r7, #20]
 8000496:	645a      	str	r2, [r3, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode <<temp2*4;
 8000498:	7b7a      	ldrb	r2, [r7, #13]
 800049a:	7bbb      	ldrb	r3, [r7, #14]
 800049c:	009b      	lsls	r3, r3, #2
 800049e:	fa02 f103 	lsl.w	r1, r2, r3
 80004a2:	4a63      	ldr	r2, [pc, #396]	; (8000630 <GPIO_Init+0x31c>)
 80004a4:	7bfb      	ldrb	r3, [r7, #15]
 80004a6:	3302      	adds	r3, #2
 80004a8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//Enable EXTI interrupt delivery by IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.PinNumber;
 80004ac:	4b61      	ldr	r3, [pc, #388]	; (8000634 <GPIO_Init+0x320>)
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	687a      	ldr	r2, [r7, #4]
 80004b2:	7912      	ldrb	r2, [r2, #4]
 80004b4:	4611      	mov	r1, r2
 80004b6:	2201      	movs	r2, #1
 80004b8:	408a      	lsls	r2, r1
 80004ba:	4611      	mov	r1, r2
 80004bc:	4a5d      	ldr	r2, [pc, #372]	; (8000634 <GPIO_Init+0x320>)
 80004be:	430b      	orrs	r3, r1
 80004c0:	6013      	str	r3, [r2, #0]
	}


	//Configure SPEED
	Temp = 0;
 80004c2:	2300      	movs	r3, #0
 80004c4:	613b      	str	r3, [r7, #16]
	Temp = pGPIOHandle->GPIO_PinConfig.PinSpeed << (2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	799b      	ldrb	r3, [r3, #6]
 80004ca:	461a      	mov	r2, r3
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	791b      	ldrb	r3, [r3, #4]
 80004d0:	005b      	lsls	r3, r3, #1
 80004d2:	fa02 f303 	lsl.w	r3, r2, r3
 80004d6:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOBaseAddr->OSPEEDR &= ~ (0x11 << 2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	689a      	ldr	r2, [r3, #8]
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	791b      	ldrb	r3, [r3, #4]
 80004e2:	005b      	lsls	r3, r3, #1
 80004e4:	2111      	movs	r1, #17
 80004e6:	fa01 f303 	lsl.w	r3, r1, r3
 80004ea:	43db      	mvns	r3, r3
 80004ec:	4619      	mov	r1, r3
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	400a      	ands	r2, r1
 80004f4:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOBaseAddr->OSPEEDR |= Temp;
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	6899      	ldr	r1, [r3, #8]
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	693a      	ldr	r2, [r7, #16]
 8000502:	430a      	orrs	r2, r1
 8000504:	609a      	str	r2, [r3, #8]

	//Configure PUPD
	Temp = 0;
 8000506:	2300      	movs	r3, #0
 8000508:	613b      	str	r3, [r7, #16]
	Temp = pGPIOHandle->GPIO_PinConfig.PinPuPdControl << (2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	79db      	ldrb	r3, [r3, #7]
 800050e:	461a      	mov	r2, r3
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	791b      	ldrb	r3, [r3, #4]
 8000514:	005b      	lsls	r3, r3, #1
 8000516:	fa02 f303 	lsl.w	r3, r2, r3
 800051a:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOBaseAddr->PUPDR &= ~(0x11 << 2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	68da      	ldr	r2, [r3, #12]
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	791b      	ldrb	r3, [r3, #4]
 8000526:	005b      	lsls	r3, r3, #1
 8000528:	2111      	movs	r1, #17
 800052a:	fa01 f303 	lsl.w	r3, r1, r3
 800052e:	43db      	mvns	r3, r3
 8000530:	4619      	mov	r1, r3
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	400a      	ands	r2, r1
 8000538:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOBaseAddr->PUPDR |= Temp;
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	68d9      	ldr	r1, [r3, #12]
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	693a      	ldr	r2, [r7, #16]
 8000546:	430a      	orrs	r2, r1
 8000548:	60da      	str	r2, [r3, #12]

	//Configure POutput Type
	Temp = 0;
 800054a:	2300      	movs	r3, #0
 800054c:	613b      	str	r3, [r7, #16]
	Temp = pGPIOHandle->GPIO_PinConfig.PinOPType << (1* pGPIOHandle->GPIO_PinConfig.PinNumber);
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	7a1b      	ldrb	r3, [r3, #8]
 8000552:	461a      	mov	r2, r3
 8000554:	687b      	ldr	r3, [r7, #4]
 8000556:	791b      	ldrb	r3, [r3, #4]
 8000558:	fa02 f303 	lsl.w	r3, r2, r3
 800055c:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOBaseAddr->OTYPER &= ~(0x1 << 1* pGPIOHandle->GPIO_PinConfig.PinNumber);
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	685a      	ldr	r2, [r3, #4]
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	791b      	ldrb	r3, [r3, #4]
 8000568:	4619      	mov	r1, r3
 800056a:	2301      	movs	r3, #1
 800056c:	408b      	lsls	r3, r1
 800056e:	43db      	mvns	r3, r3
 8000570:	4619      	mov	r1, r3
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	681b      	ldr	r3, [r3, #0]
 8000576:	400a      	ands	r2, r1
 8000578:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOBaseAddr->OTYPER |= Temp;
 800057a:	687b      	ldr	r3, [r7, #4]
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	6859      	ldr	r1, [r3, #4]
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	693a      	ldr	r2, [r7, #16]
 8000586:	430a      	orrs	r2, r1
 8000588:	605a      	str	r2, [r3, #4]

	//Configure Pin Alt. Function
	if(pGPIOHandle->GPIO_PinConfig.PinAltFunMode == GPIO_MODE_AF)
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	7a5b      	ldrb	r3, [r3, #9]
 800058e:	2b02      	cmp	r3, #2
 8000590:	d148      	bne.n	8000624 <GPIO_Init+0x310>
	{
		if(pGPIOHandle->GPIO_PinConfig.PinNumber > 7) //High register
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	791b      	ldrb	r3, [r3, #4]
 8000596:	2b07      	cmp	r3, #7
 8000598:	d923      	bls.n	80005e2 <GPIO_Init+0x2ce>
		{
			 Temp = pGPIOHandle->GPIO_PinConfig.PinAltFunMode<< (4*(pGPIOHandle->GPIO_PinConfig.PinNumber-8));
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	7a5b      	ldrb	r3, [r3, #9]
 800059e:	461a      	mov	r2, r3
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	791b      	ldrb	r3, [r3, #4]
 80005a4:	3b08      	subs	r3, #8
 80005a6:	009b      	lsls	r3, r3, #2
 80005a8:	fa02 f303 	lsl.w	r3, r2, r3
 80005ac:	613b      	str	r3, [r7, #16]
			 pGPIOHandle->pGPIOBaseAddr->AFR[1] &= ~(0x1111 << (4*(pGPIOHandle->GPIO_PinConfig.PinNumber-8)));
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	791b      	ldrb	r3, [r3, #4]
 80005b8:	3b08      	subs	r3, #8
 80005ba:	009b      	lsls	r3, r3, #2
 80005bc:	f241 1111 	movw	r1, #4369	; 0x1111
 80005c0:	fa01 f303 	lsl.w	r3, r1, r3
 80005c4:	43db      	mvns	r3, r3
 80005c6:	4619      	mov	r1, r3
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	400a      	ands	r2, r1
 80005ce:	629a      	str	r2, [r3, #40]	; 0x28
			 pGPIOHandle->pGPIOBaseAddr->AFR[1] |= Temp;
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	6a99      	ldr	r1, [r3, #40]	; 0x28
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	693a      	ldr	r2, [r7, #16]
 80005dc:	430a      	orrs	r2, r1
 80005de:	629a      	str	r2, [r3, #40]	; 0x28
			 pGPIOHandle->pGPIOBaseAddr->AFR[0] &= ~(0x1111 << (4*pGPIOHandle->GPIO_PinConfig.PinNumber));
			pGPIOHandle->pGPIOBaseAddr->AFR[0] |= Temp;
		}
	}

}
 80005e0:	e020      	b.n	8000624 <GPIO_Init+0x310>
			Temp = pGPIOHandle->GPIO_PinConfig.PinAltFunMode<< (4*pGPIOHandle->GPIO_PinConfig.PinNumber);
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	7a5b      	ldrb	r3, [r3, #9]
 80005e6:	461a      	mov	r2, r3
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	791b      	ldrb	r3, [r3, #4]
 80005ec:	009b      	lsls	r3, r3, #2
 80005ee:	fa02 f303 	lsl.w	r3, r2, r3
 80005f2:	613b      	str	r3, [r7, #16]
			 pGPIOHandle->pGPIOBaseAddr->AFR[0] &= ~(0x1111 << (4*pGPIOHandle->GPIO_PinConfig.PinNumber));
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	791b      	ldrb	r3, [r3, #4]
 80005fe:	009b      	lsls	r3, r3, #2
 8000600:	f241 1111 	movw	r1, #4369	; 0x1111
 8000604:	fa01 f303 	lsl.w	r3, r1, r3
 8000608:	43db      	mvns	r3, r3
 800060a:	4619      	mov	r1, r3
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	400a      	ands	r2, r1
 8000612:	625a      	str	r2, [r3, #36]	; 0x24
			pGPIOHandle->pGPIOBaseAddr->AFR[0] |= Temp;
 8000614:	687b      	ldr	r3, [r7, #4]
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	681b      	ldr	r3, [r3, #0]
 800061e:	693a      	ldr	r2, [r7, #16]
 8000620:	430a      	orrs	r2, r1
 8000622:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000624:	bf00      	nop
 8000626:	371c      	adds	r7, #28
 8000628:	46bd      	mov	sp, r7
 800062a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800062e:	4770      	bx	lr
 8000630:	40013800 	.word	0x40013800
 8000634:	40013c00 	.word	0x40013c00

08000638 <GPIO_PeriClockControl>:
	if(pGPIO == (GPIO_RegDef_t*) GPIOD_BASE_ADDRESS)	GPIOD_REG_RESET();
	if(pGPIO == (GPIO_RegDef_t*) GPIOE_BASE_ADDRESS)	GPIOE_REG_RESET();
}

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t Enable) //Enable / Disable GPIO clock
{
 8000638:	b480      	push	{r7}
 800063a:	b08b      	sub	sp, #44	; 0x2c
 800063c:	af00      	add	r7, sp, #0
 800063e:	6078      	str	r0, [r7, #4]
 8000640:	460b      	mov	r3, r1
 8000642:	70fb      	strb	r3, [r7, #3]
	pRCC_RegDef();
 8000644:	4b47      	ldr	r3, [pc, #284]	; (8000764 <GPIO_PeriClockControl+0x12c>)
 8000646:	627b      	str	r3, [r7, #36]	; 0x24
	if(Enable == ENABLE)
 8000648:	78fb      	ldrb	r3, [r7, #3]
 800064a:	2b01      	cmp	r3, #1
 800064c:	d148      	bne.n	80006e0 <GPIO_PeriClockControl+0xa8>
	{

		if(pGPIOx == (GPIO_RegDef_t*)GPIOA_BASE_ADDRESS)
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	4a45      	ldr	r2, [pc, #276]	; (8000768 <GPIO_PeriClockControl+0x130>)
 8000652:	4293      	cmp	r3, r2
 8000654:	d107      	bne.n	8000666 <GPIO_PeriClockControl+0x2e>
		{
			pGPIOA_RegDef();
 8000656:	4b44      	ldr	r3, [pc, #272]	; (8000768 <GPIO_PeriClockControl+0x130>)
 8000658:	623b      	str	r3, [r7, #32]
			GPIOA_PCLK_EN();
 800065a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800065c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800065e:	f043 0201 	orr.w	r2, r3, #1
 8000662:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000664:	631a      	str	r2, [r3, #48]	; 0x30
		}
		if(pGPIOx == (GPIO_RegDef_t*)GPIOB_BASE_ADDRESS)
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	4a3f      	ldr	r2, [pc, #252]	; (8000768 <GPIO_PeriClockControl+0x130>)
 800066a:	4293      	cmp	r3, r2
 800066c:	d107      	bne.n	800067e <GPIO_PeriClockControl+0x46>
		{
			pGPIOB_RegDef();
 800066e:	4b3e      	ldr	r3, [pc, #248]	; (8000768 <GPIO_PeriClockControl+0x130>)
 8000670:	61fb      	str	r3, [r7, #28]
			GPIOB_PCLK_EN();
 8000672:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000674:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000676:	f043 0202 	orr.w	r2, r3, #2
 800067a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800067c:	631a      	str	r2, [r3, #48]	; 0x30
		}
		if(pGPIOx == (GPIO_RegDef_t*)GPIOC_BASE_ADDRESS)
 800067e:	687b      	ldr	r3, [r7, #4]
 8000680:	4a3a      	ldr	r2, [pc, #232]	; (800076c <GPIO_PeriClockControl+0x134>)
 8000682:	4293      	cmp	r3, r2
 8000684:	d107      	bne.n	8000696 <GPIO_PeriClockControl+0x5e>
		{
			pGPIOC_RegDef();
 8000686:	4b39      	ldr	r3, [pc, #228]	; (800076c <GPIO_PeriClockControl+0x134>)
 8000688:	61bb      	str	r3, [r7, #24]
			GPIOC_PCLK_EN();
 800068a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800068c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800068e:	f043 0204 	orr.w	r2, r3, #4
 8000692:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000694:	631a      	str	r2, [r3, #48]	; 0x30
		}
		if(pGPIOx == (GPIO_RegDef_t*)GPIOD_BASE_ADDRESS)
 8000696:	687b      	ldr	r3, [r7, #4]
 8000698:	4a35      	ldr	r2, [pc, #212]	; (8000770 <GPIO_PeriClockControl+0x138>)
 800069a:	4293      	cmp	r3, r2
 800069c:	d107      	bne.n	80006ae <GPIO_PeriClockControl+0x76>
		{
			pGPIOD_RegDef();
 800069e:	4b34      	ldr	r3, [pc, #208]	; (8000770 <GPIO_PeriClockControl+0x138>)
 80006a0:	617b      	str	r3, [r7, #20]
			GPIOD_PCLK_EN();
 80006a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006a6:	f043 0208 	orr.w	r2, r3, #8
 80006aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006ac:	631a      	str	r2, [r3, #48]	; 0x30
		}
		if(pGPIOx == (GPIO_RegDef_t*)GPIOE_BASE_ADDRESS)
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	4a30      	ldr	r2, [pc, #192]	; (8000774 <GPIO_PeriClockControl+0x13c>)
 80006b2:	4293      	cmp	r3, r2
 80006b4:	d107      	bne.n	80006c6 <GPIO_PeriClockControl+0x8e>
		{
			pGPIOE_RegDef();
 80006b6:	4b2f      	ldr	r3, [pc, #188]	; (8000774 <GPIO_PeriClockControl+0x13c>)
 80006b8:	613b      	str	r3, [r7, #16]
			GPIOE_PCLK_EN();
 80006ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006be:	f043 0210 	orr.w	r2, r3, #16
 80006c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006c4:	631a      	str	r2, [r3, #48]	; 0x30
		}
		if(pGPIOx == (GPIO_RegDef_t*)GPIOF_BASE_ADDRESS)
 80006c6:	687b      	ldr	r3, [r7, #4]
 80006c8:	4a2b      	ldr	r2, [pc, #172]	; (8000778 <GPIO_PeriClockControl+0x140>)
 80006ca:	4293      	cmp	r3, r2
 80006cc:	d144      	bne.n	8000758 <GPIO_PeriClockControl+0x120>
		{
			pGPIOF_RegDef();
 80006ce:	4b2a      	ldr	r3, [pc, #168]	; (8000778 <GPIO_PeriClockControl+0x140>)
 80006d0:	60fb      	str	r3, [r7, #12]
			GPIOF_PCLK_EN();
 80006d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006d6:	f043 0220 	orr.w	r2, r3, #32
 80006da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006dc:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOC_BASE_ADDRESS)	GPIOC_PCLK_DI();
		if(pGPIOx == (GPIO_RegDef_t*) GPIOD_BASE_ADDRESS)	GPIOD_PCLK_DI();
		if(pGPIOx == (GPIO_RegDef_t*) GPIOE_BASE_ADDRESS)	GPIOE_PCLK_DI();
		if(pGPIOx == (GPIO_RegDef_t*) GPIOF_BASE_ADDRESS)	GPIOF_PCLK_DI();
	}
}
 80006de:	e03b      	b.n	8000758 <GPIO_PeriClockControl+0x120>
		if(pGPIOx == (GPIO_RegDef_t*) GPIOA_BASE_ADDRESS)	GPIOA_PCLK_DI();
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	4a21      	ldr	r2, [pc, #132]	; (8000768 <GPIO_PeriClockControl+0x130>)
 80006e4:	4293      	cmp	r3, r2
 80006e6:	d105      	bne.n	80006f4 <GPIO_PeriClockControl+0xbc>
 80006e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ec:	f023 0201 	bic.w	r2, r3, #1
 80006f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006f2:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOB_BASE_ADDRESS)	GPIOB_PCLK_DI();
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	4a1c      	ldr	r2, [pc, #112]	; (8000768 <GPIO_PeriClockControl+0x130>)
 80006f8:	4293      	cmp	r3, r2
 80006fa:	d105      	bne.n	8000708 <GPIO_PeriClockControl+0xd0>
 80006fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80006fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000700:	f023 0202 	bic.w	r2, r3, #2
 8000704:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000706:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOC_BASE_ADDRESS)	GPIOC_PCLK_DI();
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	4a18      	ldr	r2, [pc, #96]	; (800076c <GPIO_PeriClockControl+0x134>)
 800070c:	4293      	cmp	r3, r2
 800070e:	d105      	bne.n	800071c <GPIO_PeriClockControl+0xe4>
 8000710:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000712:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000714:	f023 0204 	bic.w	r2, r3, #4
 8000718:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800071a:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOD_BASE_ADDRESS)	GPIOD_PCLK_DI();
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	4a14      	ldr	r2, [pc, #80]	; (8000770 <GPIO_PeriClockControl+0x138>)
 8000720:	4293      	cmp	r3, r2
 8000722:	d105      	bne.n	8000730 <GPIO_PeriClockControl+0xf8>
 8000724:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000726:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000728:	f023 0208 	bic.w	r2, r3, #8
 800072c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800072e:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOE_BASE_ADDRESS)	GPIOE_PCLK_DI();
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	4a10      	ldr	r2, [pc, #64]	; (8000774 <GPIO_PeriClockControl+0x13c>)
 8000734:	4293      	cmp	r3, r2
 8000736:	d105      	bne.n	8000744 <GPIO_PeriClockControl+0x10c>
 8000738:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800073a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800073c:	f023 0210 	bic.w	r2, r3, #16
 8000740:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000742:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOF_BASE_ADDRESS)	GPIOF_PCLK_DI();
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	4a0c      	ldr	r2, [pc, #48]	; (8000778 <GPIO_PeriClockControl+0x140>)
 8000748:	4293      	cmp	r3, r2
 800074a:	d105      	bne.n	8000758 <GPIO_PeriClockControl+0x120>
 800074c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800074e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000750:	f023 0220 	bic.w	r2, r3, #32
 8000754:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000756:	631a      	str	r2, [r3, #48]	; 0x30
}
 8000758:	bf00      	nop
 800075a:	372c      	adds	r7, #44	; 0x2c
 800075c:	46bd      	mov	sp, r7
 800075e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000762:	4770      	bx	lr
 8000764:	40023800 	.word	0x40023800
 8000768:	40020400 	.word	0x40020400
 800076c:	40020800 	.word	0x40020800
 8000770:	40020c00 	.word	0x40020c00
 8000774:	40021000 	.word	0x40021000
 8000778:	40021400 	.word	0x40021400

0800077c <GPIO_ToggleOutputPin>:
{
	pGPIOx->ODR = (uint16_t) Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800077c:	b480      	push	{r7}
 800077e:	b083      	sub	sp, #12
 8000780:	af00      	add	r7, sp, #0
 8000782:	6078      	str	r0, [r7, #4]
 8000784:	460b      	mov	r3, r1
 8000786:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	695b      	ldr	r3, [r3, #20]
 800078c:	78fa      	ldrb	r2, [r7, #3]
 800078e:	2101      	movs	r1, #1
 8000790:	fa01 f202 	lsl.w	r2, r1, r2
 8000794:	405a      	eors	r2, r3
 8000796:	687b      	ldr	r3, [r7, #4]
 8000798:	615a      	str	r2, [r3, #20]
}
 800079a:	bf00      	nop
 800079c:	370c      	adds	r7, #12
 800079e:	46bd      	mov	sp, r7
 80007a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007a4:	4770      	bx	lr
	...

080007a8 <GPIO_IRQConfig>:

// *** GPIO Interrupt Config and Handling ***
void GPIO_IRQConfig(uint8_t IRQNumber, uint8_t IRQPriority, uint8_t Enable)
{
 80007a8:	b480      	push	{r7}
 80007aa:	b085      	sub	sp, #20
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	4603      	mov	r3, r0
 80007b0:	71fb      	strb	r3, [r7, #7]
 80007b2:	460b      	mov	r3, r1
 80007b4:	71bb      	strb	r3, [r7, #6]
 80007b6:	4613      	mov	r3, r2
 80007b8:	717b      	strb	r3, [r7, #5]
	//Set or Reset IRQ Number
	if(Enable == ENABLE)
 80007ba:	797b      	ldrb	r3, [r7, #5]
 80007bc:	2b01      	cmp	r3, #1
 80007be:	d133      	bne.n	8000828 <GPIO_IRQConfig+0x80>
		{
			if(IRQNumber <= 31)
 80007c0:	79fb      	ldrb	r3, [r7, #7]
 80007c2:	2b1f      	cmp	r3, #31
 80007c4:	d80a      	bhi.n	80007dc <GPIO_IRQConfig+0x34>
			{
				//program ISER0 register
				*NVIC_ISER0 |= ( 1 << IRQNumber );
 80007c6:	4b43      	ldr	r3, [pc, #268]	; (80008d4 <GPIO_IRQConfig+0x12c>)
 80007c8:	681b      	ldr	r3, [r3, #0]
 80007ca:	79fa      	ldrb	r2, [r7, #7]
 80007cc:	2101      	movs	r1, #1
 80007ce:	fa01 f202 	lsl.w	r2, r1, r2
 80007d2:	4611      	mov	r1, r2
 80007d4:	4a3f      	ldr	r2, [pc, #252]	; (80008d4 <GPIO_IRQConfig+0x12c>)
 80007d6:	430b      	orrs	r3, r1
 80007d8:	6013      	str	r3, [r2, #0]
 80007da:	e058      	b.n	800088e <GPIO_IRQConfig+0xe6>

			}else if(IRQNumber > 31 && IRQNumber < 64 ) //32 to 63
 80007dc:	79fb      	ldrb	r3, [r7, #7]
 80007de:	2b1f      	cmp	r3, #31
 80007e0:	d90f      	bls.n	8000802 <GPIO_IRQConfig+0x5a>
 80007e2:	79fb      	ldrb	r3, [r7, #7]
 80007e4:	2b3f      	cmp	r3, #63	; 0x3f
 80007e6:	d80c      	bhi.n	8000802 <GPIO_IRQConfig+0x5a>
			{
				//program ISER1 register
				*NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 80007e8:	4b3b      	ldr	r3, [pc, #236]	; (80008d8 <GPIO_IRQConfig+0x130>)
 80007ea:	681b      	ldr	r3, [r3, #0]
 80007ec:	79fa      	ldrb	r2, [r7, #7]
 80007ee:	f002 021f 	and.w	r2, r2, #31
 80007f2:	2101      	movs	r1, #1
 80007f4:	fa01 f202 	lsl.w	r2, r1, r2
 80007f8:	4611      	mov	r1, r2
 80007fa:	4a37      	ldr	r2, [pc, #220]	; (80008d8 <GPIO_IRQConfig+0x130>)
 80007fc:	430b      	orrs	r3, r1
 80007fe:	6013      	str	r3, [r2, #0]
 8000800:	e045      	b.n	800088e <GPIO_IRQConfig+0xe6>
			}
			else if(IRQNumber >= 64 && IRQNumber < 96 )
 8000802:	79fb      	ldrb	r3, [r7, #7]
 8000804:	2b3f      	cmp	r3, #63	; 0x3f
 8000806:	d942      	bls.n	800088e <GPIO_IRQConfig+0xe6>
 8000808:	79fb      	ldrb	r3, [r7, #7]
 800080a:	2b5f      	cmp	r3, #95	; 0x5f
 800080c:	d83f      	bhi.n	800088e <GPIO_IRQConfig+0xe6>
			{
				//program ISER2 register //64 to 95
				*NVIC_ISER2 |= ( 1 << (IRQNumber % 64) );
 800080e:	4b33      	ldr	r3, [pc, #204]	; (80008dc <GPIO_IRQConfig+0x134>)
 8000810:	681b      	ldr	r3, [r3, #0]
 8000812:	79fa      	ldrb	r2, [r7, #7]
 8000814:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000818:	2101      	movs	r1, #1
 800081a:	fa01 f202 	lsl.w	r2, r1, r2
 800081e:	4611      	mov	r1, r2
 8000820:	4a2e      	ldr	r2, [pc, #184]	; (80008dc <GPIO_IRQConfig+0x134>)
 8000822:	430b      	orrs	r3, r1
 8000824:	6013      	str	r3, [r2, #0]
 8000826:	e032      	b.n	800088e <GPIO_IRQConfig+0xe6>
			}
		}
	else
		{
			if(IRQNumber <= 31)
 8000828:	79fb      	ldrb	r3, [r7, #7]
 800082a:	2b1f      	cmp	r3, #31
 800082c:	d80a      	bhi.n	8000844 <GPIO_IRQConfig+0x9c>
			{
				//program ICER0 register
				*NVIC_ICER0 |= ( 1 << IRQNumber );
 800082e:	4b2c      	ldr	r3, [pc, #176]	; (80008e0 <GPIO_IRQConfig+0x138>)
 8000830:	681b      	ldr	r3, [r3, #0]
 8000832:	79fa      	ldrb	r2, [r7, #7]
 8000834:	2101      	movs	r1, #1
 8000836:	fa01 f202 	lsl.w	r2, r1, r2
 800083a:	4611      	mov	r1, r2
 800083c:	4a28      	ldr	r2, [pc, #160]	; (80008e0 <GPIO_IRQConfig+0x138>)
 800083e:	430b      	orrs	r3, r1
 8000840:	6013      	str	r3, [r2, #0]
 8000842:	e024      	b.n	800088e <GPIO_IRQConfig+0xe6>
			}else if(IRQNumber > 31 && IRQNumber < 64 )
 8000844:	79fb      	ldrb	r3, [r7, #7]
 8000846:	2b1f      	cmp	r3, #31
 8000848:	d90f      	bls.n	800086a <GPIO_IRQConfig+0xc2>
 800084a:	79fb      	ldrb	r3, [r7, #7]
 800084c:	2b3f      	cmp	r3, #63	; 0x3f
 800084e:	d80c      	bhi.n	800086a <GPIO_IRQConfig+0xc2>
			{
				//program ICER1 register
				*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 8000850:	4b24      	ldr	r3, [pc, #144]	; (80008e4 <GPIO_IRQConfig+0x13c>)
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	79fa      	ldrb	r2, [r7, #7]
 8000856:	f002 021f 	and.w	r2, r2, #31
 800085a:	2101      	movs	r1, #1
 800085c:	fa01 f202 	lsl.w	r2, r1, r2
 8000860:	4611      	mov	r1, r2
 8000862:	4a20      	ldr	r2, [pc, #128]	; (80008e4 <GPIO_IRQConfig+0x13c>)
 8000864:	430b      	orrs	r3, r1
 8000866:	6013      	str	r3, [r2, #0]
 8000868:	e011      	b.n	800088e <GPIO_IRQConfig+0xe6>
			}
			else if(IRQNumber >= 64 && IRQNumber < 96 )
 800086a:	79fb      	ldrb	r3, [r7, #7]
 800086c:	2b3f      	cmp	r3, #63	; 0x3f
 800086e:	d90e      	bls.n	800088e <GPIO_IRQConfig+0xe6>
 8000870:	79fb      	ldrb	r3, [r7, #7]
 8000872:	2b5f      	cmp	r3, #95	; 0x5f
 8000874:	d80b      	bhi.n	800088e <GPIO_IRQConfig+0xe6>
			{
				//program ICER2 register
				*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 8000876:	4b1c      	ldr	r3, [pc, #112]	; (80008e8 <GPIO_IRQConfig+0x140>)
 8000878:	681b      	ldr	r3, [r3, #0]
 800087a:	79fa      	ldrb	r2, [r7, #7]
 800087c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000880:	2101      	movs	r1, #1
 8000882:	fa01 f202 	lsl.w	r2, r1, r2
 8000886:	4611      	mov	r1, r2
 8000888:	4a17      	ldr	r2, [pc, #92]	; (80008e8 <GPIO_IRQConfig+0x140>)
 800088a:	430b      	orrs	r3, r1
 800088c:	6013      	str	r3, [r2, #0]
			}
		}

	//Set or Reset IRQ Priority

	uint8_t iprx = IRQNumber / 4;
 800088e:	79fb      	ldrb	r3, [r7, #7]
 8000890:	089b      	lsrs	r3, r3, #2
 8000892:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section  = IRQNumber % 4 ;
 8000894:	79fb      	ldrb	r3, [r7, #7]
 8000896:	f003 0303 	and.w	r3, r3, #3
 800089a:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = ( 8 * iprx_section) + ( 8 - NVIC_NO_PR_BITS_IMPLEMENTED) ;
 800089c:	7bbb      	ldrb	r3, [r7, #14]
 800089e:	00db      	lsls	r3, r3, #3
 80008a0:	b2db      	uxtb	r3, r3
 80008a2:	3304      	adds	r3, #4
 80008a4:	737b      	strb	r3, [r7, #13]

	*(  NVIC_PR_BASE_ADDRESS + iprx ) |=  ( IRQPriority << shift_amount );
 80008a6:	7bfb      	ldrb	r3, [r7, #15]
 80008a8:	009b      	lsls	r3, r3, #2
 80008aa:	f503 2364 	add.w	r3, r3, #933888	; 0xe4000
 80008ae:	681a      	ldr	r2, [r3, #0]
 80008b0:	79b9      	ldrb	r1, [r7, #6]
 80008b2:	7b7b      	ldrb	r3, [r7, #13]
 80008b4:	fa01 f303 	lsl.w	r3, r1, r3
 80008b8:	4619      	mov	r1, r3
 80008ba:	7bfb      	ldrb	r3, [r7, #15]
 80008bc:	009b      	lsls	r3, r3, #2
 80008be:	f503 2364 	add.w	r3, r3, #933888	; 0xe4000
 80008c2:	430a      	orrs	r2, r1
 80008c4:	601a      	str	r2, [r3, #0]

}
 80008c6:	bf00      	nop
 80008c8:	3714      	adds	r7, #20
 80008ca:	46bd      	mov	sp, r7
 80008cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008d0:	4770      	bx	lr
 80008d2:	bf00      	nop
 80008d4:	e000e100 	.word	0xe000e100
 80008d8:	e000e104 	.word	0xe000e104
 80008dc:	e000e108 	.word	0xe000e108
 80008e0:	e000e180 	.word	0xe000e180
 80008e4:	e000e184 	.word	0xe000e184
 80008e8:	e000e188 	.word	0xe000e188

080008ec <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber)
{
 80008ec:	b480      	push	{r7}
 80008ee:	b083      	sub	sp, #12
 80008f0:	af00      	add	r7, sp, #0
 80008f2:	4603      	mov	r3, r0
 80008f4:	71fb      	strb	r3, [r7, #7]
	// Clear pending register for corresponding Pin Number
	if(EXTI->PR & (1 << PinNumber))
 80008f6:	4b0c      	ldr	r3, [pc, #48]	; (8000928 <GPIO_IRQHandling+0x3c>)
 80008f8:	695b      	ldr	r3, [r3, #20]
 80008fa:	79fa      	ldrb	r2, [r7, #7]
 80008fc:	2101      	movs	r1, #1
 80008fe:	fa01 f202 	lsl.w	r2, r1, r2
 8000902:	4013      	ands	r3, r2
 8000904:	2b00      	cmp	r3, #0
 8000906:	d009      	beq.n	800091c <GPIO_IRQHandling+0x30>
	{
		EXTI->PR |= (1 << PinNumber); //Clear
 8000908:	4b07      	ldr	r3, [pc, #28]	; (8000928 <GPIO_IRQHandling+0x3c>)
 800090a:	695b      	ldr	r3, [r3, #20]
 800090c:	79fa      	ldrb	r2, [r7, #7]
 800090e:	2101      	movs	r1, #1
 8000910:	fa01 f202 	lsl.w	r2, r1, r2
 8000914:	4611      	mov	r1, r2
 8000916:	4a04      	ldr	r2, [pc, #16]	; (8000928 <GPIO_IRQHandling+0x3c>)
 8000918:	430b      	orrs	r3, r1
 800091a:	6153      	str	r3, [r2, #20]
	}
}
 800091c:	bf00      	nop
 800091e:	370c      	adds	r7, #12
 8000920:	46bd      	mov	sp, r7
 8000922:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000926:	4770      	bx	lr
 8000928:	40013c00 	.word	0x40013c00

0800092c <__libc_init_array>:
 800092c:	b570      	push	{r4, r5, r6, lr}
 800092e:	4e0d      	ldr	r6, [pc, #52]	; (8000964 <__libc_init_array+0x38>)
 8000930:	4c0d      	ldr	r4, [pc, #52]	; (8000968 <__libc_init_array+0x3c>)
 8000932:	1ba4      	subs	r4, r4, r6
 8000934:	10a4      	asrs	r4, r4, #2
 8000936:	2500      	movs	r5, #0
 8000938:	42a5      	cmp	r5, r4
 800093a:	d109      	bne.n	8000950 <__libc_init_array+0x24>
 800093c:	4e0b      	ldr	r6, [pc, #44]	; (800096c <__libc_init_array+0x40>)
 800093e:	4c0c      	ldr	r4, [pc, #48]	; (8000970 <__libc_init_array+0x44>)
 8000940:	f000 f818 	bl	8000974 <_init>
 8000944:	1ba4      	subs	r4, r4, r6
 8000946:	10a4      	asrs	r4, r4, #2
 8000948:	2500      	movs	r5, #0
 800094a:	42a5      	cmp	r5, r4
 800094c:	d105      	bne.n	800095a <__libc_init_array+0x2e>
 800094e:	bd70      	pop	{r4, r5, r6, pc}
 8000950:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000954:	4798      	blx	r3
 8000956:	3501      	adds	r5, #1
 8000958:	e7ee      	b.n	8000938 <__libc_init_array+0xc>
 800095a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800095e:	4798      	blx	r3
 8000960:	3501      	adds	r5, #1
 8000962:	e7f2      	b.n	800094a <__libc_init_array+0x1e>
 8000964:	0800098c 	.word	0x0800098c
 8000968:	0800098c 	.word	0x0800098c
 800096c:	0800098c 	.word	0x0800098c
 8000970:	08000990 	.word	0x08000990

08000974 <_init>:
 8000974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000976:	bf00      	nop
 8000978:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800097a:	bc08      	pop	{r3}
 800097c:	469e      	mov	lr, r3
 800097e:	4770      	bx	lr

08000980 <_fini>:
 8000980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000982:	bf00      	nop
 8000984:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000986:	bc08      	pop	{r3}
 8000988:	469e      	mov	lr, r3
 800098a:	4770      	bx	lr
