
STM32F4_Drivers_Development.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000508  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006b0  080006b8  000106b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006b0  080006b0  000106b8  2**0
                  CONTENTS
  4 .ARM          00000000  080006b0  080006b0  000106b8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006b0  080006b8  000106b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006b0  080006b0  000106b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006b4  080006b4  000106b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080006b8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080006b8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000106b8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000007d2  00000000  00000000  000106e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001cb  00000000  00000000  00010eba  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b0  00000000  00000000  00011088  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000088  00000000  00000000  00011138  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001457  00000000  00000000  000111c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000009d6  00000000  00000000  00012617  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000054bf  00000000  00000000  00012fed  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000184ac  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001fc  00000000  00000000  00018528  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000698 	.word	0x08000698

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000698 	.word	0x08000698

080001e8 <main>:

#include <stdint.h>
#include "stm32f407xx.h"

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b084      	sub	sp, #16
 80001ec:	af00      	add	r7, sp, #0
	//LED GPIO Def
	GPIO_Handle_t *GPIO_Cfg;
	GPIO_PeriClockControl(GPIOF, ENABLE);
 80001ee:	2101      	movs	r1, #1
 80001f0:	4828      	ldr	r0, [pc, #160]	; (8000294 <main+0xac>)
 80001f2:	f000 f95f 	bl	80004b4 <GPIO_PeriClockControl>
	GPIO_Cfg->pGPIOBaseAddr = GPIOF;
 80001f6:	68bb      	ldr	r3, [r7, #8]
 80001f8:	4a26      	ldr	r2, [pc, #152]	; (8000294 <main+0xac>)
 80001fa:	601a      	str	r2, [r3, #0]
	GPIO_Cfg->GPIO_PinConfig.PinAltFunMode = 0;
 80001fc:	68bb      	ldr	r3, [r7, #8]
 80001fe:	2200      	movs	r2, #0
 8000200:	725a      	strb	r2, [r3, #9]
	GPIO_Cfg->GPIO_PinConfig.PinMode = GPIO_MODE_OUTPUT;
 8000202:	68bb      	ldr	r3, [r7, #8]
 8000204:	2201      	movs	r2, #1
 8000206:	715a      	strb	r2, [r3, #5]
	GPIO_Cfg->GPIO_PinConfig.PinNumber = GPIO_PINNUM_9;
 8000208:	68bb      	ldr	r3, [r7, #8]
 800020a:	2209      	movs	r2, #9
 800020c:	711a      	strb	r2, [r3, #4]
	GPIO_Cfg->GPIO_PinConfig.PinOPType = GPIO_OP_TYPE_OD;
 800020e:	68bb      	ldr	r3, [r7, #8]
 8000210:	2201      	movs	r2, #1
 8000212:	721a      	strb	r2, [r3, #8]
	GPIO_Cfg->GPIO_PinConfig.PinPuPdControl = GPIO_PUPD_PU;
 8000214:	68bb      	ldr	r3, [r7, #8]
 8000216:	2201      	movs	r2, #1
 8000218:	71da      	strb	r2, [r3, #7]
	GPIO_Cfg->GPIO_PinConfig.PinSpeed = GPIO_SPEED_HI;
 800021a:	68bb      	ldr	r3, [r7, #8]
 800021c:	2203      	movs	r2, #3
 800021e:	719a      	strb	r2, [r3, #6]
	GPIO_Init(GPIO_Cfg);
 8000220:	68b8      	ldr	r0, [r7, #8]
 8000222:	f000 f866 	bl	80002f2 <GPIO_Init>

	//Button GPIO Def
	GPIO_PeriClockControl(GPIOE, ENABLE);
 8000226:	2101      	movs	r1, #1
 8000228:	481b      	ldr	r0, [pc, #108]	; (8000298 <main+0xb0>)
 800022a:	f000 f943 	bl	80004b4 <GPIO_PeriClockControl>
	GPIO_Cfg->pGPIOBaseAddr = GPIOE;
 800022e:	68bb      	ldr	r3, [r7, #8]
 8000230:	4a19      	ldr	r2, [pc, #100]	; (8000298 <main+0xb0>)
 8000232:	601a      	str	r2, [r3, #0]
	GPIO_Cfg->GPIO_PinConfig.PinAltFunMode = 0;
 8000234:	68bb      	ldr	r3, [r7, #8]
 8000236:	2200      	movs	r2, #0
 8000238:	725a      	strb	r2, [r3, #9]
	GPIO_Cfg->GPIO_PinConfig.PinMode = GPIO_MODE_INPUT;
 800023a:	68bb      	ldr	r3, [r7, #8]
 800023c:	2200      	movs	r2, #0
 800023e:	715a      	strb	r2, [r3, #5]
	GPIO_Cfg->GPIO_PinConfig.PinNumber = GPIO_PINNUM_3;
 8000240:	68bb      	ldr	r3, [r7, #8]
 8000242:	2203      	movs	r2, #3
 8000244:	711a      	strb	r2, [r3, #4]
	GPIO_Cfg->GPIO_PinConfig.PinOPType = 0x0;
 8000246:	68bb      	ldr	r3, [r7, #8]
 8000248:	2200      	movs	r2, #0
 800024a:	721a      	strb	r2, [r3, #8]
	GPIO_Cfg->GPIO_PinConfig.PinPuPdControl = GPIO_PUPD_PU;
 800024c:	68bb      	ldr	r3, [r7, #8]
 800024e:	2201      	movs	r2, #1
 8000250:	71da      	strb	r2, [r3, #7]
	GPIO_Cfg->GPIO_PinConfig.PinSpeed = GPIO_SPEED_HI;
 8000252:	68bb      	ldr	r3, [r7, #8]
 8000254:	2203      	movs	r2, #3
 8000256:	719a      	strb	r2, [r3, #6]
	GPIO_Init(GPIO_Cfg);
 8000258:	68b8      	ldr	r0, [r7, #8]
 800025a:	f000 f84a 	bl	80002f2 <GPIO_Init>

	uint8_t Btn_1_St = 0;
 800025e:	2300      	movs	r3, #0
 8000260:	71fb      	strb	r3, [r7, #7]

	/* Loop forever */
	while(1)
	{
		Btn_1_St = GPIO_ReadInputPin(GPIOE, GPIO_PINNUM_3);
 8000262:	2103      	movs	r1, #3
 8000264:	480c      	ldr	r0, [pc, #48]	; (8000298 <main+0xb0>)
 8000266:	f000 f9c7 	bl	80005f8 <GPIO_ReadInputPin>
 800026a:	4603      	mov	r3, r0
 800026c:	71fb      	strb	r3, [r7, #7]

		if(Btn_1_St == 0)
 800026e:	79fb      	ldrb	r3, [r7, #7]
 8000270:	2b00      	cmp	r3, #0
 8000272:	d1f6      	bne.n	8000262 <main+0x7a>
		{
			GPIO_ToggleOutputPin(GPIOF,GPIO_PINNUM_9);
 8000274:	2109      	movs	r1, #9
 8000276:	4807      	ldr	r0, [pc, #28]	; (8000294 <main+0xac>)
 8000278:	f000 f9d4 	bl	8000624 <GPIO_ToggleOutputPin>
			for(uint32_t i=0; i<500000;i++);
 800027c:	2300      	movs	r3, #0
 800027e:	60fb      	str	r3, [r7, #12]
 8000280:	e002      	b.n	8000288 <main+0xa0>
 8000282:	68fb      	ldr	r3, [r7, #12]
 8000284:	3301      	adds	r3, #1
 8000286:	60fb      	str	r3, [r7, #12]
 8000288:	68fb      	ldr	r3, [r7, #12]
 800028a:	4a04      	ldr	r2, [pc, #16]	; (800029c <main+0xb4>)
 800028c:	4293      	cmp	r3, r2
 800028e:	d9f8      	bls.n	8000282 <main+0x9a>
		Btn_1_St = GPIO_ReadInputPin(GPIOE, GPIO_PINNUM_3);
 8000290:	e7e7      	b.n	8000262 <main+0x7a>
 8000292:	bf00      	nop
 8000294:	40021400 	.word	0x40021400
 8000298:	40021000 	.word	0x40021000
 800029c:	0007a11f 	.word	0x0007a11f

080002a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a0:	480d      	ldr	r0, [pc, #52]	; (80002d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002a4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a8:	480c      	ldr	r0, [pc, #48]	; (80002dc <LoopForever+0x6>)
  ldr r1, =_edata
 80002aa:	490d      	ldr	r1, [pc, #52]	; (80002e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ac:	4a0d      	ldr	r2, [pc, #52]	; (80002e4 <LoopForever+0xe>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b0:	e002      	b.n	80002b8 <LoopCopyDataInit>

080002b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b6:	3304      	adds	r3, #4

080002b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002bc:	d3f9      	bcc.n	80002b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002be:	4a0a      	ldr	r2, [pc, #40]	; (80002e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c0:	4c0a      	ldr	r4, [pc, #40]	; (80002ec <LoopForever+0x16>)
  movs r3, #0
 80002c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c4:	e001      	b.n	80002ca <LoopFillZerobss>

080002c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c8:	3204      	adds	r2, #4

080002ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002cc:	d3fb      	bcc.n	80002c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ce:	f000 f9bf 	bl	8000650 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002d2:	f7ff ff89 	bl	80001e8 <main>

080002d6 <LoopForever>:

LoopForever:
    b LoopForever
 80002d6:	e7fe      	b.n	80002d6 <LoopForever>
  ldr   r0, =_estack
 80002d8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e4:	080006b8 	.word	0x080006b8
  ldr r2, =_sbss
 80002e8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002ec:	2000001c 	.word	0x2000001c

080002f0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f0:	e7fe      	b.n	80002f0 <ADC_IRQHandler>

080002f2 <GPIO_Init>:

// ********** GPIO APIs function definition **********

// *** GPIO Initialization and Control ***
void GPIO_Init(GPIO_Handle_t *pGPIOHandle) //Initialize GPIO Port and Pin
{
 80002f2:	b480      	push	{r7}
 80002f4:	b085      	sub	sp, #20
 80002f6:	af00      	add	r7, sp, #0
 80002f8:	6078      	str	r0, [r7, #4]
	uint32_t Temp = 0;
 80002fa:	2300      	movs	r3, #0
 80002fc:	60fb      	str	r3, [r7, #12]

	//Configure MODE
	if(pGPIOHandle->GPIO_PinConfig.PinMode < 3) //Non interrupt mode
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	795b      	ldrb	r3, [r3, #5]
 8000302:	2b02      	cmp	r3, #2
 8000304:	d81f      	bhi.n	8000346 <GPIO_Init+0x54>
	{
		Temp = pGPIOHandle->GPIO_PinConfig.PinMode << (2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	795b      	ldrb	r3, [r3, #5]
 800030a:	461a      	mov	r2, r3
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	791b      	ldrb	r3, [r3, #4]
 8000310:	005b      	lsls	r3, r3, #1
 8000312:	fa02 f303 	lsl.w	r3, r2, r3
 8000316:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOBaseAddr->MODER &= ~(0x11 << 2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	681a      	ldr	r2, [r3, #0]
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	791b      	ldrb	r3, [r3, #4]
 8000322:	005b      	lsls	r3, r3, #1
 8000324:	2111      	movs	r1, #17
 8000326:	fa01 f303 	lsl.w	r3, r1, r3
 800032a:	43db      	mvns	r3, r3
 800032c:	4619      	mov	r1, r3
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	400a      	ands	r2, r1
 8000334:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOBaseAddr->MODER |= Temp;
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	6819      	ldr	r1, [r3, #0]
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	681b      	ldr	r3, [r3, #0]
 8000340:	68fa      	ldr	r2, [r7, #12]
 8000342:	430a      	orrs	r2, r1
 8000344:	601a      	str	r2, [r3, #0]
	}

	//Configure SPEED
	Temp = 0;
 8000346:	2300      	movs	r3, #0
 8000348:	60fb      	str	r3, [r7, #12]
	Temp = pGPIOHandle->GPIO_PinConfig.PinSpeed << (2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	799b      	ldrb	r3, [r3, #6]
 800034e:	461a      	mov	r2, r3
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	791b      	ldrb	r3, [r3, #4]
 8000354:	005b      	lsls	r3, r3, #1
 8000356:	fa02 f303 	lsl.w	r3, r2, r3
 800035a:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOBaseAddr->OSPEEDR &= ~ (0x11 << 2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	689a      	ldr	r2, [r3, #8]
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	791b      	ldrb	r3, [r3, #4]
 8000366:	005b      	lsls	r3, r3, #1
 8000368:	2111      	movs	r1, #17
 800036a:	fa01 f303 	lsl.w	r3, r1, r3
 800036e:	43db      	mvns	r3, r3
 8000370:	4619      	mov	r1, r3
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	400a      	ands	r2, r1
 8000378:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOBaseAddr->OSPEEDR |= Temp;
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	6899      	ldr	r1, [r3, #8]
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	68fa      	ldr	r2, [r7, #12]
 8000386:	430a      	orrs	r2, r1
 8000388:	609a      	str	r2, [r3, #8]

	//Configure PUPD
	Temp = 0;
 800038a:	2300      	movs	r3, #0
 800038c:	60fb      	str	r3, [r7, #12]
	Temp = pGPIOHandle->GPIO_PinConfig.PinPuPdControl << (2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	79db      	ldrb	r3, [r3, #7]
 8000392:	461a      	mov	r2, r3
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	791b      	ldrb	r3, [r3, #4]
 8000398:	005b      	lsls	r3, r3, #1
 800039a:	fa02 f303 	lsl.w	r3, r2, r3
 800039e:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOBaseAddr->PUPDR &= ~(0x11 << 2* pGPIOHandle->GPIO_PinConfig.PinNumber);
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	68da      	ldr	r2, [r3, #12]
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	791b      	ldrb	r3, [r3, #4]
 80003aa:	005b      	lsls	r3, r3, #1
 80003ac:	2111      	movs	r1, #17
 80003ae:	fa01 f303 	lsl.w	r3, r1, r3
 80003b2:	43db      	mvns	r3, r3
 80003b4:	4619      	mov	r1, r3
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	400a      	ands	r2, r1
 80003bc:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOBaseAddr->PUPDR |= Temp;
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	68d9      	ldr	r1, [r3, #12]
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	68fa      	ldr	r2, [r7, #12]
 80003ca:	430a      	orrs	r2, r1
 80003cc:	60da      	str	r2, [r3, #12]

	//Configure POutput Type
	Temp = 0;
 80003ce:	2300      	movs	r3, #0
 80003d0:	60fb      	str	r3, [r7, #12]
	Temp = pGPIOHandle->GPIO_PinConfig.PinOPType << (1* pGPIOHandle->GPIO_PinConfig.PinNumber);
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	7a1b      	ldrb	r3, [r3, #8]
 80003d6:	461a      	mov	r2, r3
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	791b      	ldrb	r3, [r3, #4]
 80003dc:	fa02 f303 	lsl.w	r3, r2, r3
 80003e0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOBaseAddr->OTYPER &= ~(0x1 << 1* pGPIOHandle->GPIO_PinConfig.PinNumber);
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	685a      	ldr	r2, [r3, #4]
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	791b      	ldrb	r3, [r3, #4]
 80003ec:	4619      	mov	r1, r3
 80003ee:	2301      	movs	r3, #1
 80003f0:	408b      	lsls	r3, r1
 80003f2:	43db      	mvns	r3, r3
 80003f4:	4619      	mov	r1, r3
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	400a      	ands	r2, r1
 80003fc:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOBaseAddr->OTYPER |= Temp;
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	6859      	ldr	r1, [r3, #4]
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	68fa      	ldr	r2, [r7, #12]
 800040a:	430a      	orrs	r2, r1
 800040c:	605a      	str	r2, [r3, #4]

	//Configure Pin Alt. Function
	if(pGPIOHandle->GPIO_PinConfig.PinAltFunMode == GPIO_MODE_AF)
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	7a5b      	ldrb	r3, [r3, #9]
 8000412:	2b02      	cmp	r3, #2
 8000414:	d148      	bne.n	80004a8 <GPIO_Init+0x1b6>
	{
		if(pGPIOHandle->GPIO_PinConfig.PinNumber > 7) //High register
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	791b      	ldrb	r3, [r3, #4]
 800041a:	2b07      	cmp	r3, #7
 800041c:	d923      	bls.n	8000466 <GPIO_Init+0x174>
		{
			 Temp = pGPIOHandle->GPIO_PinConfig.PinAltFunMode<< (4*(pGPIOHandle->GPIO_PinConfig.PinNumber-8));
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	7a5b      	ldrb	r3, [r3, #9]
 8000422:	461a      	mov	r2, r3
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	791b      	ldrb	r3, [r3, #4]
 8000428:	3b08      	subs	r3, #8
 800042a:	009b      	lsls	r3, r3, #2
 800042c:	fa02 f303 	lsl.w	r3, r2, r3
 8000430:	60fb      	str	r3, [r7, #12]
			 pGPIOHandle->pGPIOBaseAddr->AFR[1] &= ~(0x1111 << (4*(pGPIOHandle->GPIO_PinConfig.PinNumber-8)));
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	791b      	ldrb	r3, [r3, #4]
 800043c:	3b08      	subs	r3, #8
 800043e:	009b      	lsls	r3, r3, #2
 8000440:	f241 1111 	movw	r1, #4369	; 0x1111
 8000444:	fa01 f303 	lsl.w	r3, r1, r3
 8000448:	43db      	mvns	r3, r3
 800044a:	4619      	mov	r1, r3
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	400a      	ands	r2, r1
 8000452:	629a      	str	r2, [r3, #40]	; 0x28
			 pGPIOHandle->pGPIOBaseAddr->AFR[1] |= Temp;
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	6a99      	ldr	r1, [r3, #40]	; 0x28
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	68fa      	ldr	r2, [r7, #12]
 8000460:	430a      	orrs	r2, r1
 8000462:	629a      	str	r2, [r3, #40]	; 0x28
			 pGPIOHandle->pGPIOBaseAddr->AFR[0] &= ~(0x1111 << (4*pGPIOHandle->GPIO_PinConfig.PinNumber));
			pGPIOHandle->pGPIOBaseAddr->AFR[0] |= Temp;
		}
	}

}
 8000464:	e020      	b.n	80004a8 <GPIO_Init+0x1b6>
			Temp = pGPIOHandle->GPIO_PinConfig.PinAltFunMode<< (4*pGPIOHandle->GPIO_PinConfig.PinNumber);
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	7a5b      	ldrb	r3, [r3, #9]
 800046a:	461a      	mov	r2, r3
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	791b      	ldrb	r3, [r3, #4]
 8000470:	009b      	lsls	r3, r3, #2
 8000472:	fa02 f303 	lsl.w	r3, r2, r3
 8000476:	60fb      	str	r3, [r7, #12]
			 pGPIOHandle->pGPIOBaseAddr->AFR[0] &= ~(0x1111 << (4*pGPIOHandle->GPIO_PinConfig.PinNumber));
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	791b      	ldrb	r3, [r3, #4]
 8000482:	009b      	lsls	r3, r3, #2
 8000484:	f241 1111 	movw	r1, #4369	; 0x1111
 8000488:	fa01 f303 	lsl.w	r3, r1, r3
 800048c:	43db      	mvns	r3, r3
 800048e:	4619      	mov	r1, r3
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	400a      	ands	r2, r1
 8000496:	625a      	str	r2, [r3, #36]	; 0x24
			pGPIOHandle->pGPIOBaseAddr->AFR[0] |= Temp;
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	68fa      	ldr	r2, [r7, #12]
 80004a4:	430a      	orrs	r2, r1
 80004a6:	625a      	str	r2, [r3, #36]	; 0x24
}
 80004a8:	bf00      	nop
 80004aa:	3714      	adds	r7, #20
 80004ac:	46bd      	mov	sp, r7
 80004ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b2:	4770      	bx	lr

080004b4 <GPIO_PeriClockControl>:
	if(pGPIO == (GPIO_RegDef_t*) GPIOD_BASE_ADDRESS)	GPIOD_REG_RESET();
	if(pGPIO == (GPIO_RegDef_t*) GPIOE_BASE_ADDRESS)	GPIOE_REG_RESET();
}

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t Enable) //Enable / Disable GPIO clock
{
 80004b4:	b480      	push	{r7}
 80004b6:	b08b      	sub	sp, #44	; 0x2c
 80004b8:	af00      	add	r7, sp, #0
 80004ba:	6078      	str	r0, [r7, #4]
 80004bc:	460b      	mov	r3, r1
 80004be:	70fb      	strb	r3, [r7, #3]
	pRCC_RegDef();
 80004c0:	4b47      	ldr	r3, [pc, #284]	; (80005e0 <GPIO_PeriClockControl+0x12c>)
 80004c2:	627b      	str	r3, [r7, #36]	; 0x24
	if(Enable == ENABLE)
 80004c4:	78fb      	ldrb	r3, [r7, #3]
 80004c6:	2b01      	cmp	r3, #1
 80004c8:	d148      	bne.n	800055c <GPIO_PeriClockControl+0xa8>
	{

		if(pGPIOx == (GPIO_RegDef_t*)GPIOA_BASE_ADDRESS)
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	4a45      	ldr	r2, [pc, #276]	; (80005e4 <GPIO_PeriClockControl+0x130>)
 80004ce:	4293      	cmp	r3, r2
 80004d0:	d107      	bne.n	80004e2 <GPIO_PeriClockControl+0x2e>
		{
			pGPIOA_RegDef();
 80004d2:	4b44      	ldr	r3, [pc, #272]	; (80005e4 <GPIO_PeriClockControl+0x130>)
 80004d4:	623b      	str	r3, [r7, #32]
			GPIOA_PCLK_EN();
 80004d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80004d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004da:	f043 0201 	orr.w	r2, r3, #1
 80004de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80004e0:	631a      	str	r2, [r3, #48]	; 0x30
		}
		if(pGPIOx == (GPIO_RegDef_t*)GPIOB_BASE_ADDRESS)
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	4a3f      	ldr	r2, [pc, #252]	; (80005e4 <GPIO_PeriClockControl+0x130>)
 80004e6:	4293      	cmp	r3, r2
 80004e8:	d107      	bne.n	80004fa <GPIO_PeriClockControl+0x46>
		{
			pGPIOB_RegDef();
 80004ea:	4b3e      	ldr	r3, [pc, #248]	; (80005e4 <GPIO_PeriClockControl+0x130>)
 80004ec:	61fb      	str	r3, [r7, #28]
			GPIOB_PCLK_EN();
 80004ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80004f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004f2:	f043 0202 	orr.w	r2, r3, #2
 80004f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80004f8:	631a      	str	r2, [r3, #48]	; 0x30
		}
		if(pGPIOx == (GPIO_RegDef_t*)GPIOC_BASE_ADDRESS)
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	4a3a      	ldr	r2, [pc, #232]	; (80005e8 <GPIO_PeriClockControl+0x134>)
 80004fe:	4293      	cmp	r3, r2
 8000500:	d107      	bne.n	8000512 <GPIO_PeriClockControl+0x5e>
		{
			pGPIOC_RegDef();
 8000502:	4b39      	ldr	r3, [pc, #228]	; (80005e8 <GPIO_PeriClockControl+0x134>)
 8000504:	61bb      	str	r3, [r7, #24]
			GPIOC_PCLK_EN();
 8000506:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000508:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800050a:	f043 0204 	orr.w	r2, r3, #4
 800050e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000510:	631a      	str	r2, [r3, #48]	; 0x30
		}
		if(pGPIOx == (GPIO_RegDef_t*)GPIOD_BASE_ADDRESS)
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	4a35      	ldr	r2, [pc, #212]	; (80005ec <GPIO_PeriClockControl+0x138>)
 8000516:	4293      	cmp	r3, r2
 8000518:	d107      	bne.n	800052a <GPIO_PeriClockControl+0x76>
		{
			pGPIOD_RegDef();
 800051a:	4b34      	ldr	r3, [pc, #208]	; (80005ec <GPIO_PeriClockControl+0x138>)
 800051c:	617b      	str	r3, [r7, #20]
			GPIOD_PCLK_EN();
 800051e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000520:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000522:	f043 0208 	orr.w	r2, r3, #8
 8000526:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000528:	631a      	str	r2, [r3, #48]	; 0x30
		}
		if(pGPIOx == (GPIO_RegDef_t*)GPIOE_BASE_ADDRESS)
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	4a30      	ldr	r2, [pc, #192]	; (80005f0 <GPIO_PeriClockControl+0x13c>)
 800052e:	4293      	cmp	r3, r2
 8000530:	d107      	bne.n	8000542 <GPIO_PeriClockControl+0x8e>
		{
			pGPIOE_RegDef();
 8000532:	4b2f      	ldr	r3, [pc, #188]	; (80005f0 <GPIO_PeriClockControl+0x13c>)
 8000534:	613b      	str	r3, [r7, #16]
			GPIOE_PCLK_EN();
 8000536:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000538:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800053a:	f043 0210 	orr.w	r2, r3, #16
 800053e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000540:	631a      	str	r2, [r3, #48]	; 0x30
		}
		if(pGPIOx == (GPIO_RegDef_t*)GPIOF_BASE_ADDRESS)
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	4a2b      	ldr	r2, [pc, #172]	; (80005f4 <GPIO_PeriClockControl+0x140>)
 8000546:	4293      	cmp	r3, r2
 8000548:	d144      	bne.n	80005d4 <GPIO_PeriClockControl+0x120>
		{
			pGPIOF_RegDef();
 800054a:	4b2a      	ldr	r3, [pc, #168]	; (80005f4 <GPIO_PeriClockControl+0x140>)
 800054c:	60fb      	str	r3, [r7, #12]
			GPIOF_PCLK_EN();
 800054e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000550:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000552:	f043 0220 	orr.w	r2, r3, #32
 8000556:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000558:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOC_BASE_ADDRESS)	GPIOC_PCLK_DI();
		if(pGPIOx == (GPIO_RegDef_t*) GPIOD_BASE_ADDRESS)	GPIOD_PCLK_DI();
		if(pGPIOx == (GPIO_RegDef_t*) GPIOE_BASE_ADDRESS)	GPIOE_PCLK_DI();
		if(pGPIOx == (GPIO_RegDef_t*) GPIOF_BASE_ADDRESS)	GPIOF_PCLK_DI();
	}
}
 800055a:	e03b      	b.n	80005d4 <GPIO_PeriClockControl+0x120>
		if(pGPIOx == (GPIO_RegDef_t*) GPIOA_BASE_ADDRESS)	GPIOA_PCLK_DI();
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	4a21      	ldr	r2, [pc, #132]	; (80005e4 <GPIO_PeriClockControl+0x130>)
 8000560:	4293      	cmp	r3, r2
 8000562:	d105      	bne.n	8000570 <GPIO_PeriClockControl+0xbc>
 8000564:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000566:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000568:	f023 0201 	bic.w	r2, r3, #1
 800056c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800056e:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOB_BASE_ADDRESS)	GPIOB_PCLK_DI();
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	4a1c      	ldr	r2, [pc, #112]	; (80005e4 <GPIO_PeriClockControl+0x130>)
 8000574:	4293      	cmp	r3, r2
 8000576:	d105      	bne.n	8000584 <GPIO_PeriClockControl+0xd0>
 8000578:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800057a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800057c:	f023 0202 	bic.w	r2, r3, #2
 8000580:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000582:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOC_BASE_ADDRESS)	GPIOC_PCLK_DI();
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	4a18      	ldr	r2, [pc, #96]	; (80005e8 <GPIO_PeriClockControl+0x134>)
 8000588:	4293      	cmp	r3, r2
 800058a:	d105      	bne.n	8000598 <GPIO_PeriClockControl+0xe4>
 800058c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800058e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000590:	f023 0204 	bic.w	r2, r3, #4
 8000594:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000596:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOD_BASE_ADDRESS)	GPIOD_PCLK_DI();
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	4a14      	ldr	r2, [pc, #80]	; (80005ec <GPIO_PeriClockControl+0x138>)
 800059c:	4293      	cmp	r3, r2
 800059e:	d105      	bne.n	80005ac <GPIO_PeriClockControl+0xf8>
 80005a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80005a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005a4:	f023 0208 	bic.w	r2, r3, #8
 80005a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80005aa:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOE_BASE_ADDRESS)	GPIOE_PCLK_DI();
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	4a10      	ldr	r2, [pc, #64]	; (80005f0 <GPIO_PeriClockControl+0x13c>)
 80005b0:	4293      	cmp	r3, r2
 80005b2:	d105      	bne.n	80005c0 <GPIO_PeriClockControl+0x10c>
 80005b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80005b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005b8:	f023 0210 	bic.w	r2, r3, #16
 80005bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80005be:	631a      	str	r2, [r3, #48]	; 0x30
		if(pGPIOx == (GPIO_RegDef_t*) GPIOF_BASE_ADDRESS)	GPIOF_PCLK_DI();
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	4a0c      	ldr	r2, [pc, #48]	; (80005f4 <GPIO_PeriClockControl+0x140>)
 80005c4:	4293      	cmp	r3, r2
 80005c6:	d105      	bne.n	80005d4 <GPIO_PeriClockControl+0x120>
 80005c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80005ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005cc:	f023 0220 	bic.w	r2, r3, #32
 80005d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80005d2:	631a      	str	r2, [r3, #48]	; 0x30
}
 80005d4:	bf00      	nop
 80005d6:	372c      	adds	r7, #44	; 0x2c
 80005d8:	46bd      	mov	sp, r7
 80005da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005de:	4770      	bx	lr
 80005e0:	40023800 	.word	0x40023800
 80005e4:	40020400 	.word	0x40020400
 80005e8:	40020800 	.word	0x40020800
 80005ec:	40020c00 	.word	0x40020c00
 80005f0:	40021000 	.word	0x40021000
 80005f4:	40021400 	.word	0x40021400

080005f8 <GPIO_ReadInputPin>:

uint8_t GPIO_ReadInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80005f8:	b480      	push	{r7}
 80005fa:	b085      	sub	sp, #20
 80005fc:	af00      	add	r7, sp, #0
 80005fe:	6078      	str	r0, [r7, #4]
 8000600:	460b      	mov	r3, r1
 8000602:	70fb      	strb	r3, [r7, #3]
		uint8_t Value;
		Value = (uint8_t) ((pGPIOx->IDR >> PinNumber) & 0x00000001);
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	691a      	ldr	r2, [r3, #16]
 8000608:	78fb      	ldrb	r3, [r7, #3]
 800060a:	fa22 f303 	lsr.w	r3, r2, r3
 800060e:	b2db      	uxtb	r3, r3
 8000610:	f003 0301 	and.w	r3, r3, #1
 8000614:	73fb      	strb	r3, [r7, #15]
		return Value;
 8000616:	7bfb      	ldrb	r3, [r7, #15]
}
 8000618:	4618      	mov	r0, r3
 800061a:	3714      	adds	r7, #20
 800061c:	46bd      	mov	sp, r7
 800061e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000622:	4770      	bx	lr

08000624 <GPIO_ToggleOutputPin>:
{
	pGPIOx->ODR = (uint16_t) Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000624:	b480      	push	{r7}
 8000626:	b083      	sub	sp, #12
 8000628:	af00      	add	r7, sp, #0
 800062a:	6078      	str	r0, [r7, #4]
 800062c:	460b      	mov	r3, r1
 800062e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	695b      	ldr	r3, [r3, #20]
 8000634:	78fa      	ldrb	r2, [r7, #3]
 8000636:	2101      	movs	r1, #1
 8000638:	fa01 f202 	lsl.w	r2, r1, r2
 800063c:	405a      	eors	r2, r3
 800063e:	687b      	ldr	r3, [r7, #4]
 8000640:	615a      	str	r2, [r3, #20]
}
 8000642:	bf00      	nop
 8000644:	370c      	adds	r7, #12
 8000646:	46bd      	mov	sp, r7
 8000648:	f85d 7b04 	ldr.w	r7, [sp], #4
 800064c:	4770      	bx	lr
	...

08000650 <__libc_init_array>:
 8000650:	b570      	push	{r4, r5, r6, lr}
 8000652:	4e0d      	ldr	r6, [pc, #52]	; (8000688 <__libc_init_array+0x38>)
 8000654:	4c0d      	ldr	r4, [pc, #52]	; (800068c <__libc_init_array+0x3c>)
 8000656:	1ba4      	subs	r4, r4, r6
 8000658:	10a4      	asrs	r4, r4, #2
 800065a:	2500      	movs	r5, #0
 800065c:	42a5      	cmp	r5, r4
 800065e:	d109      	bne.n	8000674 <__libc_init_array+0x24>
 8000660:	4e0b      	ldr	r6, [pc, #44]	; (8000690 <__libc_init_array+0x40>)
 8000662:	4c0c      	ldr	r4, [pc, #48]	; (8000694 <__libc_init_array+0x44>)
 8000664:	f000 f818 	bl	8000698 <_init>
 8000668:	1ba4      	subs	r4, r4, r6
 800066a:	10a4      	asrs	r4, r4, #2
 800066c:	2500      	movs	r5, #0
 800066e:	42a5      	cmp	r5, r4
 8000670:	d105      	bne.n	800067e <__libc_init_array+0x2e>
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000678:	4798      	blx	r3
 800067a:	3501      	adds	r5, #1
 800067c:	e7ee      	b.n	800065c <__libc_init_array+0xc>
 800067e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000682:	4798      	blx	r3
 8000684:	3501      	adds	r5, #1
 8000686:	e7f2      	b.n	800066e <__libc_init_array+0x1e>
 8000688:	080006b0 	.word	0x080006b0
 800068c:	080006b0 	.word	0x080006b0
 8000690:	080006b0 	.word	0x080006b0
 8000694:	080006b4 	.word	0x080006b4

08000698 <_init>:
 8000698:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800069a:	bf00      	nop
 800069c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800069e:	bc08      	pop	{r3}
 80006a0:	469e      	mov	lr, r3
 80006a2:	4770      	bx	lr

080006a4 <_fini>:
 80006a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006a6:	bf00      	nop
 80006a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006aa:	bc08      	pop	{r3}
 80006ac:	469e      	mov	lr, r3
 80006ae:	4770      	bx	lr
